.TH "SimpleWeb::ClientBase< socket_type >" 3 "Sat Apr 29 2017" "Clayer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SimpleWeb::ClientBase< socket_type > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <client_http\&.hpp>\fP
.PP
Inherited by \fBSimpleWeb::Client< socket_type >\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBConfig\fP"
.br
.ti -1c
.RI "class \fBResponse\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~ClientBase\fP ()"
.br
.ti -1c
.RI "std::shared_ptr< \fBResponse\fP > \fBrequest\fP (const std::string &request_type, const std::string &path='/', boost::string_ref content='', const std::map< std::string, std::string > &header=std::map< std::string, std::string >())"
.br
.ti -1c
.RI "std::shared_ptr< \fBResponse\fP > \fBrequest\fP (const std::string &request_type, const std::string &path, std::iostream &content, const std::map< std::string, std::string > &header=std::map< std::string, std::string >())"
.br
.ti -1c
.RI "void \fBclose\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBConfig\fP \fBconfig\fP"
.br
.RI "\fISet before calling request\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBClientBase\fP (const std::string &host_port, unsigned short default_port)"
.br
.ti -1c
.RI "std::pair< std::string, 
.br
unsigned short > \fBparse_host_port\fP (const std::string &host_port, unsigned short default_port)"
.br
.ti -1c
.RI "virtual void \fBconnect\fP ()=0"
.br
.ti -1c
.RI "std::shared_ptr
.br
< boost::asio::deadline_timer > \fBget_timeout_timer\fP (size_t timeout=0)"
.br
.ti -1c
.RI "void \fBparse_response_header\fP (const std::shared_ptr< \fBResponse\fP > &response) const "
.br
.ti -1c
.RI "std::shared_ptr< \fBResponse\fP > \fBrequest_read\fP ()"
.br
.ti -1c
.RI "void \fBrequest_read_chunked\fP (const std::shared_ptr< \fBResponse\fP > &response, boost::asio::streambuf &streambuf)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "boost::asio::io_service \fBio_service\fP"
.br
.ti -1c
.RI "boost::asio::ip::tcp::resolver \fBresolver\fP"
.br
.ti -1c
.RI "std::unique_ptr< socket_type > \fBsocket\fP"
.br
.ti -1c
.RI "std::mutex \fBsocket_mutex\fP"
.br
.ti -1c
.RI "std::string \fBhost\fP"
.br
.ti -1c
.RI "unsigned short \fBport\fP"
.br
.in -1c

.SS "template<class socket_type> class SimpleWeb::ClientBase< socket_type >"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class socket_type> virtual \fBSimpleWeb::ClientBase\fP< socket_type >::~\fBClientBase\fP ()\fC [inline, virtual]\fP"
.SS "template<class socket_type> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBClientBase\fP (const std::string &host_port, unsigned shortdefault_port)\fC [inline, protected]\fP"
.SH "Member Function Documentation"
.PP 
.SS "template<class socket_type> void \fBSimpleWeb::ClientBase\fP< socket_type >::\fBclose\fP ()\fC [inline]\fP"
.SS "template<class socket_type> virtual void \fBSimpleWeb::ClientBase\fP< socket_type >::\fBconnect\fP ()\fC [protected, pure virtual]\fP"
.PP
Implemented in \fBSimpleWeb::Client< HTTP >\fP, \fBClientTest\fP, and \fBSimpleWeb::Client< HTTPS >\fP\&.
.SS "template<class socket_type> std::shared_ptr<boost::asio::deadline_timer> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBget_timeout_timer\fP (size_ttimeout = \fC0\fP)\fC [inline, protected]\fP"
.SS "template<class socket_type> std::pair<std::string, unsigned short> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBparse_host_port\fP (const std::string &host_port, unsigned shortdefault_port)\fC [inline, protected]\fP"
.SS "template<class socket_type> void \fBSimpleWeb::ClientBase\fP< socket_type >::\fBparse_response_header\fP (const std::shared_ptr< \fBResponse\fP > &response) const\fC [inline, protected]\fP"
.SS "template<class socket_type> std::shared_ptr<\fBResponse\fP> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBrequest\fP (const std::string &request_type, const std::string &path = \fC'/'\fP, boost::string_refcontent = \fC''\fP, const std::map< std::string, std::string > &header = \fCstd::map<std::string, std::string>()\fP)\fC [inline]\fP"
.SS "template<class socket_type> std::shared_ptr<\fBResponse\fP> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBrequest\fP (const std::string &request_type, const std::string &path, std::iostream &content, const std::map< std::string, std::string > &header = \fCstd::map<std::string, std::string>()\fP)\fC [inline]\fP"
.SS "template<class socket_type> std::shared_ptr<\fBResponse\fP> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBrequest_read\fP ()\fC [inline, protected]\fP"
.SS "template<class socket_type> void \fBSimpleWeb::ClientBase\fP< socket_type >::\fBrequest_read_chunked\fP (const std::shared_ptr< \fBResponse\fP > &response, boost::asio::streambuf &streambuf)\fC [inline, protected]\fP"
.SH "Member Data Documentation"
.PP 
.SS "template<class socket_type> \fBConfig\fP \fBSimpleWeb::ClientBase\fP< socket_type >::\fBconfig\fP"
.PP
Set before calling request\&. 
.SS "template<class socket_type> std::string \fBSimpleWeb::ClientBase\fP< socket_type >::\fBhost\fP\fC [protected]\fP"
.SS "template<class socket_type> boost::asio::io_service \fBSimpleWeb::ClientBase\fP< socket_type >::\fBio_service\fP\fC [protected]\fP"
.SS "template<class socket_type> unsigned short \fBSimpleWeb::ClientBase\fP< socket_type >::\fBport\fP\fC [protected]\fP"
.SS "template<class socket_type> boost::asio::ip::tcp::resolver \fBSimpleWeb::ClientBase\fP< socket_type >::\fBresolver\fP\fC [protected]\fP"
.SS "template<class socket_type> std::unique_ptr<socket_type> \fBSimpleWeb::ClientBase\fP< socket_type >::\fBsocket\fP\fC [protected]\fP"
.SS "template<class socket_type> std::mutex \fBSimpleWeb::ClientBase\fP< socket_type >::\fBsocket_mutex\fP\fC [protected]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Clayer from the source code\&.
