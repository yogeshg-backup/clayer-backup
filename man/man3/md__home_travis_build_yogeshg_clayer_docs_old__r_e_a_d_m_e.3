.TH "md__home_travis_build_yogeshg_clayer_docs_old__r_e_a_d_m_e" 3 "Sat Apr 29 2017" "Clayer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__home_travis_build_yogeshg_clayer_docs_old__r_e_a_d_m_e \- clayer 
Logging and analysis facility in C++ using compile time template meta programming\&. Library design report, tutorial and documentation can be found in \fCProject Wiki\fP\&.
.PP
.SS "Aim"
.PP
.IP "\(bu" 2
Logging Library - full flexibility of logging including levels, formats, logging to different streams
.IP "\(bu" 2
Analysis of Logs - millions of log records get created every day, not only should a good library create them it should also be able to analyze them
.IP "\(bu" 2
Performance
.IP "  \(bu" 4
Make compile decisions and compile time
.IP "  \(bu" 4
zero overhead for level not in use
.PP

.IP "\(bu" 2
Intuition
.IP "  \(bu" 4
Easy syntax for setting up logs
.IP "  \(bu" 4
Intuitive syntax for actual logging, users should be able to migrate from std::cerr using simple find and replace
.PP

.PP
.PP
.SS "Scope of Project"
.PP
.SS "Version 0\&.8"
.PP
.SS "Version 1\&.0"
.PP
.SS "Version 1\&.2"
.PP
.SS "HTTP Server Tester"
.PP
.SS "Environment Setup"
.PP
.IP "1." 4
Install Boost Library and set the environment variable \fCBOOST_ROOT\fP to be the top level directory of the library\&.
.IP "2." 4
Create a new directory \fCbuild\fP inside \fCclayer/test/server\fP and run \fCcmake \&.\&.\fP
.IP "3." 4
Run \fCmake\fP
.IP "4." 4
The server is already loaded with \fCclayer\fP logging library\&. Run \fC\&./http_examples\fP to start an HTTP server on \fC127\&.0\&.0\&.1:8080\fP
.IP "5." 4
Random test - simulating user behavior on the server\&. Run \fC\&./logtest\&.sh\fP inside \fCclayer/server/tests\fP
.IP "6." 4
Stress test - TODO
.PP
.PP
.SS "Links"
.PP
.IP "\(bu" 2
\fCProposal\fP contains
.IP "\(bu" 2
We will follow this \fCProject Structure\fP 
.PP

